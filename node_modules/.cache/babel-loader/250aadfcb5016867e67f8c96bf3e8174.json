{"ast":null,"code":"import _slicedToArray from\"D:/ReactProject1/ReactProject/Crgfe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./StopWatch.css\";import Timer from\"./Timer\";import ControlButtons from\"./ControlButtons\";import Test from\"./Test\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function StopWatch(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isPaused=_useState4[0],setIsPaused=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),time=_useState6[0],setTime=_useState6[1];React.useEffect(function(){var interval=null;if(isActive&&isPaused===false){interval=setInterval(function(){setTime(function(time){return time+10;});},10);}else{clearInterval(interval);}return function(){clearInterval(interval);};},[isActive,isPaused]);var handleStart=function handleStart(){setIsActive(true);setIsPaused(false);};var handlePauseResume=function handlePauseResume(){setIsPaused(!isPaused);};var handleReset=function handleReset(){setIsActive(false);setTime(0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"stop-watch\",children:[/*#__PURE__*/_jsx(Timer,{time:time}),/*#__PURE__*/_jsx(ControlButtons,{active:isActive,isPaused:isPaused,handleStart:handleStart,handlePauseResume:handlePauseResume,handleReset:handleReset})]});}export default StopWatch;","map":{"version":3,"sources":["D:/ReactProject1/ReactProject/Crgfe/src/StopWatch.jsx"],"names":["React","useState","Timer","ControlButtons","Test","StopWatch","isActive","setIsActive","isPaused","setIsPaused","time","setTime","useEffect","interval","setInterval","clearInterval","handleStart","handlePauseResume","handleReset"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFACA,QAASC,CAAAA,SAAT,EAAqB,CACrB,cAAgCJ,QAAQ,CAAC,KAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAAgCN,QAAQ,CAAC,IAAD,CAAxC,yCAAOO,QAAP,eAAiBC,WAAjB,eACA,eAAwBR,QAAQ,CAAC,CAAD,CAAhC,yCAAOS,IAAP,eAAaC,OAAb,eAEAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACrB,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CAEA,GAAIP,QAAQ,EAAIE,QAAQ,GAAK,KAA7B,CAAoC,CACpCK,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC5BH,OAAO,CAAC,SAACD,IAAD,QAAUA,CAAAA,IAAI,CAAG,EAAjB,EAAD,CAAP,CACA,CAFqB,CAEnB,EAFmB,CAAtB,CAGC,CAJD,IAIO,CACPK,aAAa,CAACF,QAAD,CAAb,CACC,CACD,MAAO,WAAM,CACbE,aAAa,CAACF,QAAD,CAAb,CACC,CAFD,CAGA,CAbD,CAaG,CAACP,QAAD,CAAWE,QAAX,CAbH,EAeA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzBT,WAAW,CAAC,IAAD,CAAX,CACAE,WAAW,CAAC,KAAD,CAAX,CACA,CAHD,CAKA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC/BR,WAAW,CAAC,CAACD,QAAF,CAAX,CACA,CAFD,CAIA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzBX,WAAW,CAAC,KAAD,CAAX,CACAI,OAAO,CAAC,CAAD,CAAP,CACA,CAHD,CAKA,mBACC,aAAK,SAAS,CAAC,YAAf,wBACA,KAAC,KAAD,EAAO,IAAI,CAAED,IAAb,EADA,cAEA,KAAC,cAAD,EACC,MAAM,CAAEJ,QADT,CAEC,QAAQ,CAAEE,QAFX,CAGC,WAAW,CAAEQ,WAHd,CAIC,iBAAiB,CAAEC,iBAJpB,CAKC,WAAW,CAAEC,WALd,EAFA,GADD,CAYC,CAED,cAAeb,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./StopWatch.css\";\r\nimport Timer from \"./Timer\";\r\nimport ControlButtons from \"./ControlButtons\";\r\nimport Test from \"./Test\";\r\nfunction StopWatch() {\r\nconst [isActive, setIsActive] = useState(false);\r\nconst [isPaused, setIsPaused] = useState(true);\r\nconst [time, setTime] = useState(0);\r\n\r\nReact.useEffect(() => {\r\n\tlet interval = null;\r\n\r\n\tif (isActive && isPaused === false) {\r\n\tinterval = setInterval(() => {\r\n\t\tsetTime((time) => time + 10);\r\n\t}, 10);\r\n\t} else {\r\n\tclearInterval(interval);\r\n\t}\r\n\treturn () => {\r\n\tclearInterval(interval);\r\n\t};\r\n}, [isActive, isPaused]);\r\n\r\nconst handleStart = () => {\r\n\tsetIsActive(true);\r\n\tsetIsPaused(false);\r\n};\r\n\r\nconst handlePauseResume = () => {\r\n\tsetIsPaused(!isPaused);\r\n};\r\n\r\nconst handleReset = () => {\r\n\tsetIsActive(false);\r\n\tsetTime(0);\r\n};\r\n\r\nreturn (\r\n\t<div className=\"stop-watch\">\r\n\t<Timer time={time} />\r\n\t<ControlButtons\r\n\t\tactive={isActive}\r\n\t\tisPaused={isPaused}\r\n\t\thandleStart={handleStart}\r\n\t\thandlePauseResume={handlePauseResume}\r\n\t\thandleReset={handleReset}\r\n\t/>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default StopWatch;\r\n"]},"metadata":{},"sourceType":"module"}