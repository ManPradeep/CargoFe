{"ast":null,"code":"import _slicedToArray from \"D:\\\\ReactProject2\\\\ReactProject\\\\Crgfe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactProject2\\\\ReactProject\\\\Crgfe\\\\src\\\\StopWatch.jsx\";\nimport React, { useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"./Timer\";\nimport ControlButtons from \"./ControlButtons\";\n\nfunction StopWatch() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isActive = _useState2[0],\n        setIsActive = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isPaused = _useState4[0],\n        setIsPaused = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        time = _useState6[0],\n        setTime = _useState6[1];\n\n  React.useEffect(() => {\n    let interval = null;\n\n    if (isActive && isPaused === false) {\n      interval = setInterval(() => {\n        setTime(time => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, isPaused]);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"stop-watch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(ControlButtons, {\n    active: isActive,\n    isPaused: isPaused,\n    handleStart: handleStart,\n    handlePauseResume: handlePauseResume,\n    handleReset: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["D:\\ReactProject2\\ReactProject\\Crgfe\\src\\StopWatch.jsx"],"names":["React","useState","Timer","ControlButtons","StopWatch","isActive","setIsActive","isPaused","setIsPaused","time","setTime","useEffect","interval","setInterval","clearInterval","handleStart","handlePauseResume","handleReset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,SAASC,SAAT,GAAqB;AAAA,oBACWH,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACdI,QADc;AAAA,QACJC,WADI;;AAAA,qBAEWL,QAAQ,CAAC,IAAD,CAFnB;AAAA;AAAA,QAEdM,QAFc;AAAA,QAEJC,WAFI;;AAAA,qBAGGP,QAAQ,CAAC,CAAD,CAHX;AAAA;AAAA,QAGdQ,IAHc;AAAA,QAGRC,OAHQ;;AAKrBV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACrB,QAAIC,QAAQ,GAAG,IAAf;;AAEA,QAAIP,QAAQ,IAAIE,QAAQ,KAAK,KAA7B,EAAoC;AACpCK,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC5BH,QAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,EAAlB,CAAP;AACA,OAFqB,EAEnB,EAFmB,CAAtB;AAGC,KAJD,MAIO;AACPK,MAAAA,aAAa,CAACF,QAAD,CAAb;AACC;;AACD,WAAO,MAAM;AACbE,MAAAA,aAAa,CAACF,QAAD,CAAb;AACC,KAFD;AAGA,GAbD,EAaG,CAACP,QAAD,EAAWE,QAAX,CAbH;;AAeA,QAAMQ,WAAW,GAAG,MAAM;AACzBT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAHD;;AAKA,QAAMQ,iBAAiB,GAAG,MAAM;AAC/BR,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,GAFD;;AAIA,QAAMU,WAAW,GAAG,MAAM;AACzBX,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,IAAAA,OAAO,CAAC,CAAD,CAAP;AACA,GAHD;;AAKA,SACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,cAAD;AACC,IAAA,MAAM,EAAEJ,QADT;AAEC,IAAA,QAAQ,EAAEE,QAFX;AAGC,IAAA,WAAW,EAAEQ,WAHd;AAIC,IAAA,iBAAiB,EAAEC,iBAJpB;AAKC,IAAA,WAAW,EAAEC,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADD;AAYC;;AAED,eAAeb,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./StopWatch.css\";\r\nimport Timer from \"./Timer\";\r\nimport ControlButtons from \"./ControlButtons\";\r\nfunction StopWatch() {\r\nconst [isActive, setIsActive] = useState(false);\r\nconst [isPaused, setIsPaused] = useState(true);\r\nconst [time, setTime] = useState(0);\r\n\r\nReact.useEffect(() => {\r\n\tlet interval = null;\r\n\r\n\tif (isActive && isPaused === false) {\r\n\tinterval = setInterval(() => {\r\n\t\tsetTime((time) => time + 10);\r\n\t}, 10);\r\n\t} else {\r\n\tclearInterval(interval);\r\n\t}\r\n\treturn () => {\r\n\tclearInterval(interval);\r\n\t};\r\n}, [isActive, isPaused]);\r\n\r\nconst handleStart = () => {\r\n\tsetIsActive(true);\r\n\tsetIsPaused(false);\r\n};\r\n\r\nconst handlePauseResume = () => {\r\n\tsetIsPaused(!isPaused);\r\n};\r\n\r\nconst handleReset = () => {\r\n\tsetIsActive(false);\r\n\tsetTime(0);\r\n};\r\n\r\nreturn (\r\n\t<div className=\"stop-watch\">\r\n\t<Timer time={time} />\r\n\t<ControlButtons\r\n\t\tactive={isActive}\r\n\t\tisPaused={isPaused}\r\n\t\thandleStart={handleStart}\r\n\t\thandlePauseResume={handlePauseResume}\r\n\t\thandleReset={handleReset}\r\n\t/>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default StopWatch;\r\n"]},"metadata":{},"sourceType":"module"}